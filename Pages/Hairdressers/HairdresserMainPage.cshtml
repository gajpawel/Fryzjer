using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Fryzjer.Data;
using Fryzjer.Models;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace Fryzjer.Pages.Admin
{
    public class AddEmployeeModel : PageModel
    {
        private readonly FryzjerContext _context;

        public AddEmployeeModel(FryzjerContext context)
        {
            _context = context;
        }

        // Property for binding the new Hairdresser data
        [BindProperty]
        public Hairdresser NewHairdresser { get; set; }

        // List of available Places for the dropdown
        public List<Place>
    Places { get; set; }

    // This method will load available places for the dropdown
    public void OnGet()
    {
    Places = _context.Place.ToList();
    }

    // This method handles the form submission
    public async Task<IActionResult>
        OnPostAsync()
        {
        if (ModelState.IsValid)
        {
        // Ensure that the status is provided, and PlaceId is valid
        if (NewHairdresser.Status == null)
        {
        ModelState.AddModelError("NewHairdresser.Status", "Status is required.");
        return Page();
        }

        if (NewHairdresser.PlaceId == null || NewHairdresser.PlaceId <= 0)
        {
        ModelState.AddModelError("NewHairdresser.PlaceId", "Place is required.");
        return Page();
        }

        // Add the new hairdresser to the context
        _context.Hairdresser.Add(NewHairdresser);
        await _context.SaveChangesAsync();

        // Redirect to the employee management page
        return RedirectToPage("/Admin/EmployeeManagement");
        }

        // If the model is not valid, re-load places for dropdown
        Places = _context.Place.ToList();
        return Page();
        }
        }
        }
