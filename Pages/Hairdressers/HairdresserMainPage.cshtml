@page
@model Fryzjer.Pages.Hairdressers.HairdresserMainPageModel
@{
    ViewData["Title"] = "Panel fryzjera";
    var today = DateTime.Now.Date;
}

<div class="container mt-4">
    <h1 class="text-center mb-4">Harmonogram</h1>

    <div class="d-flex justify-content-between mb-3">
        <a href="?week=@(Model.CurrentWeek - 1)" class="btn btn-outline-primary">Poprzednia</a>
        <a href="?week=@(Model.CurrentWeek + 1)" class="btn btn-outline-primary">Następna</a>
    </div>

    <!-- Harmonogram tygodnia -->
    @for (int weekIndex = 0; weekIndex < 2; weekIndex++)
    {
        var weeklySchedule = weekIndex == 0 ? Model.WeeklySchedule1 : Model.WeeklySchedule2;

        <div class="row text-center mb-5">
            @foreach (var day in weeklySchedule)
            {
                <div class="col-md-2 border bg-light mx-2 p-2">
                    <h5>@day.Date.ToString("dddd, dd-MM-yyyy")</h5>
                    <ul class="list-unstyled">
                        @if (day.Date < today)
                        {
                            <li>---</li>
                        }
                        else
                        {
                            @foreach (var hour in day.AvailableHours)
                            {
                                <li>
                                    @if (hour.IsReserved)
                                    {
                                        <button class="btn btn-sm btn-danger mb-2" disabled>
                                            @hour.Time
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-sm btn-success time-slot mb-2"
                                                data-hour="@hour.Time"
                                                data-date="@day.Date.ToString("yyyy-MM-dd")"
                                                data-bs-toggle="modal"
                                                data-bs-target="#reservationModal">
                                            @hour.Time
                                        </button>
                                    }
                                </li>
                            }
                        }
                    </ul>
                </div>
            }
        </div>
    }
</div>

<!-- Modal do rezerwacji -->
<div class="modal fade" id="reservationModal" tabindex="-1" aria-labelledby="reservationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reservationModalLabel">Rezerwacja godziny</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="reservationForm">
                    <div class="mb-3">
                        <label for="clientLogin" class="form-label">Login klienta</label>
                        <input type="text" class="form-control" id="clientLogin" placeholder="Opcjonalny login klienta">
                    </div>
                    <div class="mb-3">
                        <label for="clientName" class="form-label">Imię</label>
                        <input type="text" class="form-control" id="clientName" placeholder="Imię klienta" required>
                    </div>
                    <div class="mb-3">
                        <label for="clientSurname" class="form-label">Nazwisko</label>
                        <input type="text" class="form-control" id="clientSurname" placeholder="Nazwisko klienta" required>
                    </div>
                    <div class="mb-3">
                        <label for="clientPhone" class="form-label">Numer telefonu</label>
                        <input type="text" class="form-control" id="clientPhone" placeholder="Numer telefonu" required>
                    </div>
                    <div class="mb-3">
                        <label for="clientGender" class="form-label">Płeć</label>
                        <select class="form-control" id="clientGender" required>
                            <option value="M">Mężczyzna</option>
                            <option value="K">Kobieta</option>
                            <option value="N">Inne</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="service" class="form-label">Usługa</label>
                        <select class="form-control" id="service" required>
                            @foreach (var service in Model.Services)
                            {
                                <option value="@service.Id" data-duration="@service.Duration">
                                    @service.Name
                                </option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="reservationStart" class="form-label">Godzina rozpoczęcia</label>
                        <input type="text" class="form-control" id="reservationStart" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="reservationEnd" class="form-label">Godzina zakończenia</label>
                        <input type="text" class="form-control" id="reservationEnd" readonly>
                        <button type="button" class="btn btn-link" id="changeTime">Zmień czas</button>
                    </div>
                    <input type="hidden" id="reservationDate">
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuluj</button>
                <button type="button" class="btn btn-primary" id="saveReservation">Zarezerwuj</button>
            </div>
        </div>
    </div>
</div>

<script>
    let selectedDate, selectedHour;

    // Obsługa kliknięcia godziny
    document.querySelectorAll('.time-slot').forEach(button => {
        button.addEventListener('click', function () {
            selectedDate = this.getAttribute('data-date');
            selectedHour = this.getAttribute('data-hour');

            document.getElementById('reservationDate').value = selectedDate;
            document.getElementById('reservationStart').value = selectedHour;

            // Automatyczne dostosowanie czasu zakończenia na podstawie usługi
            const serviceSelect = document.getElementById('service');
            const reservationEnd = document.getElementById('reservationEnd');

            serviceSelect.addEventListener('change', () => {
                const duration = parseInt(serviceSelect.options[serviceSelect.selectedIndex].dataset.duration);
                const [startHour, startMinute] = selectedHour.split(':').map(Number);
                const totalMinutes = startHour * 60 + startMinute + duration;

                const endHour = Math.floor(totalMinutes / 60);
                const endMinute = totalMinutes % 60;
                reservationEnd.value = `${String(endHour).padStart(2, '0')}:${String(endMinute).padStart(2, '0')}`;
            });

            serviceSelect.dispatchEvent(new Event('change')); // Inicjalizacja
        });
    });

    // Obsługa zmiany czasu zakończenia
    document.getElementById('changeTime').addEventListener('click', () => {
        const reservationEnd = document.getElementById('reservationEnd');
        reservationEnd.removeAttribute('readonly');
    });

    // Obsługa rezerwacji
    document.getElementById('saveReservation').addEventListener('click', async () => {
        const clientLogin = document.getElementById('clientLogin').value;
        const clientName = document.getElementById('clientName').value;
        const clientSurname = document.getElementById('clientSurname').value;
        const clientPhone = document.getElementById('clientPhone').value;
        const clientGender = document.getElementById('clientGender').value;
        const serviceId = document.getElementById('service').value;
        const reservationStart = document.getElementById('reservationStart').value;
        const reservationEnd = document.getElementById('reservationEnd').value;

        const response = await fetch('/api/reservation', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                date: selectedDate,
                hour: reservationStart,
                client: {
                    login: clientLogin || null,
                    name: clientName,
                    surname: clientSurname,
                    phone: clientPhone,
                    gender: clientGender
                },
                serviceId: serviceId,
                endHour: reservationEnd
            })
        });

        if (response.ok) {
            alert('Rezerwacja została zapisana.');
            location.reload();
        } else {
            alert('Wystąpił błąd przy tworzeniu rezerwacji.');
        }
    });
</script>
