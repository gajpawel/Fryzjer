@page
@model ScheduleManagementModel
@{
    ViewData["Title"] = "Zarządzanie harmonogramami";
}

<div class="container-fluid mt-4">
    <h1 class="mb-4">@ViewData["Title"]</h1>

    <div class="row mb-4">
        <div class="col-md-4">
            <form method="get" class="form-inline">
                <input type="hidden" name="weekOffset" value="@Model.WeekOffset" />
                <div class="form-group">
                    <label for="hairdresserId" class="mr-2">Wybierz fryzjera:</label>
                    <select name="hairdresserId" id="hairdresserId" class="form-control"
                            asp-items="Model.HairdressersList"
                            asp-for="SelectedHairdresserId"
                            onchange="this.form.submit()">
                    </select>
                </div>
            </form>
        </div>
    </div>

    @if (Model.SelectedHairdresser != null)
    {
        <div class="row mb-3">
            <div class="col">
                <div class="d-flex justify-content-between align-items-center">
                    <h5>
                        Harmonogram od @Model.WeekStartDate.ToString("dd.MM.yyyy") 
                        do @Model.WeekStartDate.AddDays(5).ToString("dd.MM.yyyy")
                    </h5>
                    <div class="btn-group">
                        <a href="?hairdresserId=@Model.SelectedHairdresserId&weekOffset=@(Model.WeekOffset - 1)" 
                           class="btn btn-outline-primary">
                            <i class="bi bi-arrow-left"></i> Poprzedni tydzień
                        </a>
                        @if (Model.WeekOffset != 0)
                        {
                            <a href="?hairdresserId=@Model.SelectedHairdresserId&weekOffset=0" 
                               class="btn btn-outline-secondary">
                                Bieżący tydzień
                            </a>
                        }
                        <a href="?hairdresserId=@Model.SelectedHairdresserId&weekOffset=@(Model.WeekOffset + 1)" 
                           class="btn btn-outline-primary">
                            Następny tydzień <i class="bi bi-arrow-right"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>

    {
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">@Model.SelectedHairdresser.Name @Model.SelectedHairdresser.Surname</h5>
                <small class="text-muted">@(Model.SelectedHairdresser.Place?.Name ?? "Brak przypisanego lokalu")</small>
            </div>
            <div class="card-body p-2">
                <div class="schedule-container">
                    <div class="d-flex">
                        @foreach (var day in Model.WeeklySchedule)
                        {
                            <div class="day-column flex-fill mx-1">
                                <h6 class="text-center">@day.Date.ToString("dddd, dd-MM")</h6>
                                <div class="time-slots">
                                    @foreach (var block in day.TimeBlocks)
                                    {
                                        <div class="time-block @(block.IsReserved ? "reserved" : "") p-1 mb-1"
                                             data-bs-toggle="tooltip"
                                             data-bs-placement="top"
                                             title="@(block.IsReserved ? $"{block.ClientInfo}\n{block.ServiceName}" : "Wolny termin")">
                                            <small>@block.TimeRange</small>
                                            @if (block.IsReserved)
                                            {
                                                <div class="client-info">
                                                    <small>@block.ServiceName</small>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }


<style>
    .time-block {
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 4px;
    }

    .time-block.reserved {
        background-color: #e2e3e5;
    }

    .schedule-container {
        overflow-x: auto;
    }

    .day-column {
        min-width: 150px;
    }

    .client-info {
        font-size: 0.75rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>

        @section Scripts {
        <script>
            // Inicjalizacja tooltipów Bootstrap
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            })
        </script>
        }
}
